facet_grid(Dimension ~SNR, labeller = label_parsed, scales = "free_y") +
ylab("Recall") +
theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
strip.text.x = element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
}
combinePrecision = function(a,b,c = NULL,d, ref,filtered = NULL, ribo = F){
if (is.null(filtered) == T){
filtered = c("All", "Quarter Adaptive 95%",
"Quarter Adaptive 99%", "Quarter Shuffle 95%", "Shuffle 95%",
"Shuffle Weighted", "Static 0.60","Static 0.75", "Static 0.90", "LASSO 1SE", "LASSO MIN")
}
dimension = c("n = 20, p = 1000, active = 2",
"n = 100, p = 500, active = 10",
"n = 200, p = 200, active = 20",
"n = 500, p = 100, active = 20")
labels  = c("(I):~n==20*`,`~p==1000*`,`~`|`*beta[S]*`|`==2",
"(II):~n==100*`,`~p==500*`,`~`|`*beta[S]*`|`==10",
"(III):~n==200*`,`~p==200*`,`~`|`*beta[S]*`|`==20",
"(IV):~n==500*`,`~p==100*`,`~`|`*beta[S]*`|`==20")
SNR = c(0.5,1,2, 3)
SNRlabels = c("~SNR==0.5", "~SNR==1", "~SNR==2", "~SNR==3")
r = rbind(a |> cleanPrecision() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[1], N = "A"),
b |> cleanPrecision() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[2], N = "B"),
c |> cleanPrecision() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[3], N = "C"),
d |> cleanPrecision() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = SNR[4], N = "C"))
r$Method = as.character(r$Method)
r$Method[r$Method == "LASSO 1SE"] = "LASSO"
r$Method[r$Method == "Exclusion ATS"] = "EATS"
r$Method[r$Method == "All"] = "ATS"
r$Method = factor(r$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
r = data.frame(r) |> mutate(Dimension = dimension[ref]) |>
mutate(Dimension = factor(Dimension, labels = labels[ref]),
SNR = factor(SNR, levels = c("0.5", "1", "2", "3"),
labels = c(SNRlabels[1],
SNRlabels[2],
SNRlabels[3],
SNRlabels[4])))
return(r)
}
totplotPrecision = function(TOT){
ggplot(TOT,aes(x = Method, y = Precision, fill = Method)) + geom_boxplot() +
facet_wrap(Dimension ~SNR, labeller = label_parsed, ncol = 4) +
ylab("Recall") +
theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
}
prplot1 = function(recall, precision, recall1, precision1){
r = ggplot(recall, aes(x = Method, y = Recall, fill = Method)) +
geom_boxplot() + facet_grid(Dimension~SNR, labeller = label_parsed) +
ylab("Recall") + theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x= element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
p = ggplot(precision, aes(x = Method, y = Precision, fill = Method)) +
geom_boxplot() + facet_grid(Dimension~SNR, labeller = label_parsed) +
ylab("Precision") + theme_few_grid(base_size = 20) +
xlab(element_blank()) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.text.x = element_blank(),
strip.text.x = element_blank(),
axis.ticks.x = element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
rr = ggplot(recall1, aes(x = Method, y = Recall, fill = Method)) +
geom_boxplot() + facet_grid(Dimension~SNR, labeller = label_parsed) +
ylab("Recall") + theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x= element_blank(),
strip.text.x = element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
pp = ggplot(precision1, aes(x = Method, y = Precision, fill = Method)) +
geom_boxplot() + facet_grid(Dimension~SNR, labeller = label_parsed) +
ylab("Precision") + theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
strip.text.x = element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
library(patchwork)
r/p/rr/pp
}
### FDR Function ###
fdr = function(X, p, beta, snr, EV, LOOPS = 1000){
n.selected = false.selections = correct.selections.prop = method = pi = c()
for (i in 1:LOOPS){
signal = sqrt(mean((as.matrix(X) %*% as.matrix(beta))^2))
sigma = as.numeric(signal/sqrt(snr))
# Compute Y with SNR
Y = as.matrix(X)%*%as.matrix(beta) + rnorm(nrow(X), 0, sd = sigma)
# Stability Selection
s = stabs::stabsel(x = X, y = Y, B = 100,
fitfun = stabs::lars.lasso, PFER = 5, cutoff = 0.75,
sampling.type = "MB")
# Shuffle data
idx = sample(1:nrow(X), replace = F)
rX = X[idx,]
idxPushed = c(tail(idx, 1), head(idx, -1))
rY = Y[idxPushed] |> as.matrix(ncol = 1)
# Exclusion Probability Threshold
sMix = stabs::stabsel(x = rX, y = rY, B = 100,
fitfun = stabs::lars.lasso, PFER = 5, cutoff = 0.75,
sampling.type = "MB")
sMix_prob = sort(sMix$max, decreasing = T)
mix_exclusion = quantile(sMix_prob, 0.95)
EATS =  convert(s)[1:(length(convert(s)))][convert(s)[1:(length(convert(s)))] >= 100*mix_exclusion]
if (length(EATS) == 2){EATS = c(EATS, EATS[1])}
EATSix = EATS |> getR()
pi.hat = EATS[EATSix]/100
if (pi.hat <= 0.5){
s = stabs::stabsel(x = X, y = Y, B = 100,
fitfun = stabs::lars.lasso, PFER = EV, cutoff = 0.501,
sampling.type = "MB")
}else{
s = stabs::stabsel(x = X, y = Y, B = 100,
fitfun = stabs::lars.lasso, PFER = EV, cutoff = pi.hat,
sampling.type = "MB")
}
n.selected[i] = length(s$selected)
false.selections[i] = sum(!(s$selected %in% 1:active))
correct.selections.prop[i] = sum((s$selected %in% 1:active))/active
pi[i] = pi.hat
method[i] = ifelse(pi.hat < 0.5, "CPSS", "SS")
if (i %% 10 == 0){print(i)}
}
out = data.frame(n.selected,false.selections, correct.selections.prop, method, pi, EV, snr)
}
load("Data/S1.Rdata")
load("Data/S2.Rdata")
load("Data/S3.Rdata")
load("Data/S4.Rdata")
# MCC
c11hard = combine(S1.05hard, S1.1hard, S1.2hard, S1.3hard,  1, filtered = filtered) |> makeCluster()
c22hard = combine(S2.05hard, S2.1hard, S2.2hard, S2.3hard,  2, filtered = filtered) |> makeCluster()
c33hard = combine(S3.05hard, S3.1hard, S3.2hard, S3.3hard,  3, filtered = filtered) |> makeCluster()
c44hard = combine(S4.05hard, S4.1hard, S4.2hard, S4.3hard,  4, filtered = filtered) |> makeCluster()
c1hard = rbind(c11hard,c22hard) |> totplotnoaxis()
c2hard = rbind(c33hard,c44hard) |> totplot()
c1hard/c2hard
c11Nhard = combineN(S1.05hard, S1.1hard, S1.2hard, S1.3hard,  1, filtered = filtered) |> makeCluster()
c22Nhard = combineN(S2.05hard, S2.1hard, S2.2hard, S2.3hard,  2, filtered = filtered) |> makeCluster()
c33Nhard = combineN(S3.05hard, S3.1hard, S3.2hard, S3.3hard,  3, filtered = filtered) |> makeCluster()
c44Nhard = combineN(S4.05hard, S4.1hard, S4.2hard, S4.3hard,  4, filtered = filtered) |> makeCluster()
c1nhard = rbind(c11Nhard,c22Nhard) |> totplotNnoaxis(lim = 50)
c2nhard = rbind(c33Nhard,c44Nhard) |> totplotN(lim = 60)
c1nhard/c2nhard
c11Precisionhard = combinePrecision(S1.05hard, S1.1hard,S1.2hard, S1.3hard, 1, filtered = filtered) |> makeCluster()
c22Precisionhard = combinePrecision(S2.05hard, S2.1hard,S2.2hard, S2.3hard, 2, filtered = filtered) |> makeCluster()
c33Precisionhard = combinePrecision(S3.05hard, S3.1hard,S3.2hard, S3.3hard, 3, filtered = filtered) |> makeCluster()
c44Precisionhard = combinePrecision(S4.05hard, S4.1hard,S4.2hard, S4.3hard, 4, filtered = filtered) |> makeCluster()
phard1 = prplot1(c11Recallhard, c11Precisionhard, c22Recallhard, c22Precisionhard)
c11Recallhard = combineRecall(S1.05hard,S1.1hard, S1.2hard, S1.3hard,  1, filtered = filtered) |> makeCluster()
c22Recallhard = combineRecall(S2.05hard,S2.1hard, S2.2hard, S2.3hard,  2, filtered = filtered) |> makeCluster()
c33Recallhard = combineRecall(S3.05hard,S3.1hard, S3.2hard, S3.3hard,  3, filtered = filtered) |> makeCluster()
c44Recallhard = combineRecall(S4.05hard,S4.1hard, S4.2hard, S4.3hard,  4, filtered = filtered) |> makeCluster()
phard1 = prplot1(c11Recallhard, c11Precisionhard, c22Recallhard, c22Precisionhard)
phard2 = prplot1(c33Recallhard, c33Precisionhard, c44Recallhard, c44Precisionhard)
phard1
phard2
load("Data/d10.Rdata")
load("Data/d5.Rdata")
d5.1.df = d5.1 |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==1")
d5.3.df = d5.3 |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==3")
d5 = rbind(d5.1.df,d5.3.df) |> mutate(SNR = factor(SNR, levels = c("~SNR==1", "~SNR==3")))
d5$Method = as.character(d5$Method)
d5$Method[d5$Method == "LASSO 1SE"] = "LASSO"
d5$Method[d5$Method == "Exclusion ATS"] = "EATS"
d5$Method = factor(d5$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
d5 = data.frame(d5) |> mutate(Dimension = "`|`*beta[S]*`|`==5") |>
mutate(Dimension = factor(Dimension)) |> makeCluster()
d10.1.df = d10.1 |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==1")
d10.3.df = d10.3 |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==3")
d10 = rbind(d10.1.df,d10.3.df)|> mutate(SNR = factor(SNR, levels = c("~SNR==1", "~SNR==3")))
d10$Method = as.character(d5$Method)
d10$Method[d10$Method == "LASSO 1SE"] = "LASSO"
d10$Method[d10$Method == "Exclusion ATS"] = "EATS"
d10$Method = factor(d10$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
d10 = data.frame(d10) |> mutate(Dimension = "`|`*beta[S]*`|`==10") |>
mutate(Dimension = factor(Dimension)) |> makeCluster()
d5plot = ggplot(d5,aes(x = Method, y = MCC, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_grid(Dimension ~SNR, labeller = label_parsed) +
theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
xlab(element_blank()) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x= element_blank(),
strip.text.x = element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
d10plot = ggplot(d10,aes(x = Method, y = MCC, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_grid(Dimension ~SNR, labeller = label_parsed) +
theme_few_grid(base_size = 20) +
xlab(element_blank()) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x= element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
d5.1.df.N = d5.1 |> cleanN() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==1")
d5.3.df.N = d5.3 |> cleanN() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==3")
d5N = rbind(d5.1.df.N,d5.3.df.N)|> mutate(SNR = factor(SNR, levels = c("~SNR==1", "~SNR==3")))
d5N$Method = as.character(d5N$Method)
d5N$Method[d5N$Method == "LASSO 1SE"] = "LASSO"
d5N$Method[d5N$Method == "Exclusion ATS"] = "EATS"
d5N$Method[d5N$Method == "All"] = "ATS"
d5N$Method = factor(d5N$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
d5N = data.frame(d5N) |> mutate(Dimension = "`|`*beta[S]*`|`==5") |>
mutate(Dimension = factor(Dimension)) |> makeCluster()
d10.1.df.N = d10.1 |> cleanN() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==1")
d10.3.df.N = d10.3 |> cleanN() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==3")
d10N = rbind(d10.1.df.N,d10.3.df.N)|> mutate(SNR = factor(SNR, levels = c("~SNR==1", "~SNR==3")))
d10N$Method = as.character(d5N$Method)
d10N$Method[d10N$Method == "LASSO 1SE"] = "LASSO"
d10N$Method[d10N$Method == "Exclusion ATS"] = "EATS"
d10N$Method[d10N$Method == "All"] = "ATS"
d10N$Method = factor(d10N$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
d10N = data.frame(d10N) |> mutate(Dimension = "`|`*beta[S]*`|`==10") |>
mutate(Dimension = factor(Dimension)) |> makeCluster()
d5nplot = ggplot(d5N,aes(x = Method, y = NN, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_grid(Dimension ~SNR, labeller = label_parsed) +
ylab("Variables Selected") +
theme_few_grid(base_size = 20) +
geom_hline( aes(yintercept = 5), linetype = "dashed", linewidth = 0.5) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
coord_cartesian(ylim = c(0, 25)) +
xlab(element_blank()) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
strip.text.x = element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
d10nplot = ggplot(d10N,aes(x = Method, y = NN, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_grid(Dimension ~SNR, labeller = label_parsed) +
ylab("Variables Selected") +
theme_few_grid(base_size = 20) +
coord_cartesian(ylim = c(0, 35)) +
xlab(element_blank()) +
geom_hline( aes(yintercept = 10), linetype = "dashed", linewidth = 0.5) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x= element_blank(),
strip.text.x = element_blank())   +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
d10plot/d5plot/d10nplot/d5nplot
d5.1.df.Precision = d5.1 |> cleanPrecision() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==1")
d5.3.df.Precision = d5.3 |> cleanPrecision() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==3")
d5Precision = rbind(d5.1.df.Precision,d5.3.df.Precision)|> mutate(SNR = factor(SNR, levels = c("~SNR==1", "~SNR==3")))
d5Precision$Method = as.character(d5Precision$Method)
d5Precision$Method[d5Precision$Method == "LASSO 1SE"] = "LASSO"
d5Precision$Method[d5Precision$Method == "Exclusion ATS"] = "EATS"
d5Precision$Method[d5Precision$Method == "All"] = "ATS"
d5Precision$Method = factor(d5Precision$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
d5Precision = data.frame(d5Precision) |> mutate(Dimension = "`|`*beta[S]*`|`==5") |>
mutate(Dimension = factor(Dimension)) |> makeCluster()
d10.1.df.Precision = d10.1 |> cleanPrecision() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==1")
d10.3.df.Precision = d10.3 |> cleanPrecision() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==3")
d10Precision = rbind(d10.1.df.Precision,d10.3.df.Precision)|> mutate(SNR = factor(SNR, levels = c("~SNR==1", "~SNR==3")))
d10Precision$Method = as.character(d10Precision$Method)
d10Precision$Method[d10Precision$Method == "LASSO 1SE"] = "LASSO"
d10Precision$Method[d10Precision$Method == "Exclusion ATS"] = "EATS"
d10Precision$Method[d10Precision$Method == "All"] = "ATS"
d10Precision$Method = factor(d10Precision$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
d10Precision = data.frame(d10Precision) |> mutate(Dimension = "`|`*beta[S]*`|`==10") |>
mutate(Dimension = factor(Dimension)) |> makeCluster()
d5nplotprecision = ggplot(d5Precision,aes(x = Method, y = Precision, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_wrap(Dimension ~SNR, labeller = label_parsed, ncol = 4) +
ylab("Precision") +
theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x= element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
d10nplotprecision = ggplot(d10Precision,aes(x = Method, y = Precision, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_wrap(Dimension ~SNR, labeller = label_parsed, ncol = 4) +
ylab("Precision") +
theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x= element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
#---#---#---#---#---#---#---#---#---#---#---#---#---#---
# Recall
d5.1.df.Recall = d5.1 |> cleanRecall() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==1")
d5.3.df.Recall = d5.3 |> cleanRecall() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==3")
d5Recall = rbind(d5.1.df.Recall,d5.3.df.Recall)|> mutate(SNR = factor(SNR, levels = c("~SNR==1", "~SNR==3")))
d5Recall$Method = as.character(d5Recall$Method)
d5Recall$Method[d5Recall$Method == "LASSO 1SE"] = "LASSO"
d5Recall$Method[d5Recall$Method == "Exclusion ATS"] = "EATS"
d5Recall$Method[d5Recall$Method == "All"] = "ATS"
d5Recall$Method = factor(d5Recall$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
d5Recall = data.frame(d5Recall) |> mutate(Dimension = "`|`*beta[S]*`|`==5") |>
mutate(Dimension = factor(Dimension)) |> makeCluster()
d10.1.df.Recall = d10.1 |> cleanRecall() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==1")
d10.3.df.Recall = d10.3 |> cleanRecall() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==3")
d10Recall = rbind(d10.1.df.Recall,d10.3.df.Recall)|> mutate(SNR = factor(SNR, levels = c("~SNR==1", "~SNR==3")))
d10Recall$Method = as.character(d5Recall$Method)
d10Recall$Method[d10Recall$Method == "LASSO 1SE"] = "LASSO"
d10Recall$Method[d10Recall$Method == "Exclusion ATS"] = "EATS"
d10Recall$Method[d10Recall$Method == "All"] = "ATS"
d10Recall$Method = factor(d10Recall$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
d10Recall = data.frame(d10Recall) |> mutate(Dimension = "`|`*beta[S]*`|`==10") |>
mutate(Dimension = factor(Dimension)) |> makeCluster()
pr = rbind(d10Recall, d5Recall)
pp = rbind(d10Precision, d5Precision)
prplot1 = ggplot(pr,aes(x = Method, y = Recall, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_grid(Dimension~SNR, labeller = label_parsed) +
ylab("Recall") +
theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
strip.text.y = element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
prplot2 = ggplot(pp,aes(x = Method, y = Precision, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_grid(Dimension~SNR, labeller = label_parsed) +
ylab("Precision") +
theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
prplot1|prplot2
load("Data/pro4.RData")
load("Data/pro9.RData")
pro9.1.df = pro9.1 |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==1")
pro9.3.df = pro9.3 |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==3")
pro9 = rbind(pro9.1.df,pro9.3.df)|> mutate(SNR = factor(SNR, levels = c("~SNR==1", "~SNR==3")))
pro9$Method = as.character(pro9$Method)
pro9$Method[pro9$Method == "LASSO 1SE"] = "LASSO"
pro9$Method[pro9$Method == "Exclusion ATS"] = "EATS"
pro9$Method[pro9$Method == "All"] = "ATS"
pro9$Method = factor(pro9$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
pro9 = data.frame(pro9) |> mutate(Dimension = "`|`*beta[S]*`|`==9") |>
mutate(Dimension = factor(Dimension)) |> makeCluster()
pro4.1.df = pro4.1 |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==1")
pro4.3.df = pro4.3 |> cleanMCC() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==3")
pro4 = rbind(pro4.1.df,pro4.3.df)|> mutate(SNR = factor(SNR, levels = c("~SNR==1", "~SNR==3")))
pro4$Method = as.character(pro9$Method)
pro4$Method[pro4$Method == "LASSO 1SE"] = "LASSO"
pro4$Method[pro4$Method == "Exclusion ATS"] = "EATS"
pro4$Method[pro4$Method == "All"] = "ATS"
pro4$Method = factor(pro4$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
pro4 = data.frame(pro4) |> mutate(Dimension = "`|`*beta[S]*`|`==4") |>
mutate(Dimension = factor(Dimension)) |> makeCluster()
pro9plot = ggplot(pro9,aes(x = Method, y = MCC, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_grid(Dimension ~SNR, labeller = label_parsed) +
theme_few_grid(base_size = 20) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
ylim(0, 1) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x= element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
pro4plot = ggplot(pro4,aes(x = Method, y = MCC, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_grid(Dimension ~SNR, labeller = label_parsed) +
theme_few_grid(base_size = 20) +
ylim(0, 1) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x= element_blank(),
strip.text.x = element_blank())+
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
#---#---#---#---#---#---#---#---#---#---#---#---#---#---
# Variables Selected
pro9.1.df.N = pro9.1 |> cleanN() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==1")
pro9.3.df.N = pro9.3 |> cleanN() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==3")
pro9N = rbind(pro9.1.df.N,pro9.3.df.N)|> mutate(SNR = factor(SNR, levels = c("~SNR==1", "~SNR==3")))
pro9N$Method = as.character(pro9N$Method)
pro9N$Method[pro9N$Method == "LASSO 1SE"] = "LASSO"
pro9N$Method[pro9N$Method == "Exclusion ATS"] = "EATS"
pro9N$Method[pro9N$Method == "All"] = "ATS"
pro9N$Method = factor(pro9N$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
pro9N = data.frame(pro9N) |> mutate(Dimension = "`|`*beta[S]*`|`==9") |>
mutate(Dimension = factor(Dimension)) |> makeCluster()
pro4.1.df.N = pro4.1 |> cleanN() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==1")
pro4.3.df.N = pro4.3 |> cleanN() |> dplyr::filter(Method %in% filtered) |> mutate(SNR = "~SNR==3")
pro4N = rbind(pro4.1.df.N,pro4.3.df.N)|> mutate(SNR = factor(SNR, levels = c("~SNR==1", "~SNR==3")))
pro4N$Method = as.character(pro9N$Method)
pro4N$Method[pro4N$Method == "LASSO 1SE"] = "LASSO"
pro4N$Method[pro4N$Method == "Exclusion ATS"] = "EATS"
pro4N$Method[pro4N$Method == "All"] = "ATS"
pro4N$Method = factor(pro4N$Method, levels = c("ATS", "EATS", "Static 0.60", "Static 0.75", "Static 0.90", "LASSO","Knockoff","SCAD"))
pro4N = data.frame(pro4N) |> mutate(Dimension = "`|`*beta[S]*`|`==4") |>
mutate(Dimension = factor(Dimension)) |> makeCluster()
pro9nplot = ggplot(pro9N,aes(x = Method, y = NN, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_grid(Dimension ~SNR, labeller = label_parsed) +
ylab("Variables Selected") +
theme_few_grid(base_size = 20) +
coord_cartesian(ylim = c(0, 50)) +
geom_hline( aes(yintercept = 9), linetype = "dashed", linewidth = 0.5) +
xlab(element_blank()) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x= element_blank(),
strip.text.x = element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
pro4nplot = ggplot(pro4N,aes(x = Method, y = NN, fill = Method)) + geom_boxplot(alpha = 0.65) +
facet_grid(Dimension ~SNR, labeller = label_parsed) +
ylab("Variables Selected") +
theme_few_grid(base_size = 20) +
coord_cartesian(ylim = c(0, 60)) +
geom_hline( aes(yintercept = 4), linetype = "dashed", linewidth = 0.5) +
stat_summary(fun ="mean", shape = 5, size = 0.5) +
xlab(element_blank()) +
stat_summary(fun= "mean", geom="line", linetype ="solid", linewidth = 0.5,  aes(group= cluster, alpha = 2)) +
theme(legend.position = "none",axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
strip.text.x = element_blank()) +
scale_fill_manual(values = c("#FC8D62", "#FFD92F","#A6D854","#A6D854","#A6D854","#8DA0CB","#8DA0CB","#8DA0CB"))
pro9plot/pro4plot/pro9nplot/pro4nplot
lars::data(diabetes)
data(diabetes)
load("Data/FDR.I.RData")
load("Data/FDR.II.RData")
load("Data/FDR.III.RData")
load("Data/FDR.IV.RData")
#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--
# Table
#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--#--
fI = rbind(fIs1e2, fIs3e2, fIs1e5, fIs3e5, fIs1e10, fIs3e10)  |> mutate(Setting = "I")
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
# R-code to reproduce Section 4.4                                   #
# in the paper: Data-Adaptive Automatic Threshold Calibration       #
#  for Stability Selection (Huang et al. 2025)                      #
#                                                                   #
# Author: Martin Huang (martin.huang@sydney.edu.au)                 #
#         School of Mathematics & Statistics, University of Sydney  #
#         AUSTRALIA                                                 #
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - #
source("Functions.R")
fI = rbind(fIs1e2, fIs3e2, fIs1e5, fIs3e5, fIs1e10, fIs3e10)  |> mutate(Setting = "I")
fII = rbind(fIIs1e2, fIIs3e2, fIIs1e5, fIIs3e5, fIIs1e10, fIIs3e10) |> mutate(Setting = "II")
fIII = rbind(fIIIs1e2, fIIIs3e2, fIIIs1e5, fIIIs3e5, fIIIs1e10, fIIIs3e10) |> mutate(Setting = "III")
fIV = rbind(fIVs1e2, fIVs3e2, fIVs1e5, fIVs3e5, fIVs1e10, fIVs3e10) |> mutate(Setting = "IV")
f = rbind(fI, fII, fIII, fIV) |>
group_by(Setting, snr, EV) |>
summarise(error = 1 - mean(false.selections > EV),
correct.prop = mean(correct.selections.prop),
avg.selected = mean(n.selected)) |>
mutate(correct.prop = round(correct.prop, 2))
f
source("Functions.R")
load("Data/FDR.I.RData")
load("Data/FDR.II.RData")
load("Data/FDR.III.RData")
load("Data/FDR.IV.RData")
fI = rbind(fIs1e2, fIs3e2, fIs1e5, fIs3e5, fIs1e10, fIs3e10)  |> mutate(Setting = "I")
fII = rbind(fIIs1e2, fIIs3e2, fIIs1e5, fIIs3e5, fIIs1e10, fIIs3e10) |> mutate(Setting = "II")
fIII = rbind(fIIIs1e2, fIIIs3e2, fIIIs1e5, fIIIs3e5, fIIIs1e10, fIIIs3e10) |> mutate(Setting = "III")
fIV = rbind(fIVs1e2, fIVs3e2, fIVs1e5, fIVs3e5, fIVs1e10, fIVs3e10) |> mutate(Setting = "IV")
f = rbind(fI, fII, fIII, fIV) |>
group_by(Setting, snr, EV) |>
summarise(error = 1 - mean(false.selections > EV),
correct.prop = mean(correct.selections.prop),
avg.selected = mean(n.selected)) |>
mutate(correct.prop = round(correct.prop, 2))
f
View(f)
fI$n.selected
f = rbind(fI, fII, fIII, fIV) |>
group_by(Setting, snr, EV) |>
summarise(error = 1 - mean(false.selections > EV),
correct.prop = mean(correct.selections.prop),
avg.selected = mean(n.selected)) |>
mutate(correct.prop = round(correct.prop, 2),
avg.selected = round(avg.selected,2))
f
View(f)
View(f |> select(-error)
View(f |> select(-error))
fI$method
fI$method |> table()
(fI$method |> table())[1]/(fI$method |> table())[2
]
(fI$method |> table())[1]/((fI$method |> table())[1] + (fI$method |> table())[2])
